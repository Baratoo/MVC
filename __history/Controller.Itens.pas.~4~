unit Controller.Itens;

interface

uses
  Controller.Interfaces;

type
  TControllerItens = class(TInterfacedObject, IControllerItens)
    private
      FParent : IControllerVendas;
    public
      constructor Create(Parent : IControllerVendas);
      destructor Destroy; override;
      class function New(Parent : IControllerVendas) : IControllerItens;
  end;

implementation

{ TControllerItens }

constructor TControllerItens.Create(Parent : IControllerVendas);
begin
  FParent := Parent;
end;

destructor TControllerItens.Destroy;
begin

  inherited;
end;

class function TControllerItens.New(Parent : IControllerVendas) : IControllerItens;
begin
  Result := Self.Create(Parent);
end;

end.
